<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Hexo</title>
  
  
  <link href="/atom.xml" rel="self"/>
  
  <link href="https://fengyongbin.github.io/"/>
  <updated>2020-08-01T03:39:44.334Z</updated>
  <id>https://fengyongbin.github.io/</id>
  
  <author>
    <name>Fengyongbin</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>字符串</title>
    <link href="https://fengyongbin.github.io/2020/08/01/%E5%AD%97%E7%AC%A6%E4%B8%B2/"/>
    <id>https://fengyongbin.github.io/2020/08/01/%E5%AD%97%E7%AC%A6%E4%B8%B2/</id>
    <published>2020-08-01T03:32:36.883Z</published>
    <updated>2020-08-01T03:39:44.334Z</updated>
    
    <content type="html"><![CDATA[<h2 id="String"><a href="#String" class="headerlink" title="String"></a>String</h2><blockquote><p>String在JDK1.8和JDK1.9中底层有所不同，在JDK1.8中String底层是char数组并用final修饰，在JDK1.9中底层改为byte数组。直接用引号的字符串在堆的字符串常量池中，只创建一次内存地址相同。字符串不适合进行频繁拼接，可能会引起内存溢出。</p></blockquote><h2 id="StringBuffer"><a href="#StringBuffer" class="headerlink" title="StringBuffer"></a>StringBuffer</h2><blockquote><p>Stringbuffer底层是一个初始容量为16的byte数组，他没有被final修饰被用于字符串拼接操作。当StingBuffer容量不足时会进行扩容，容量扩大2倍加2。Stringbuffer被synchronized修饰是线程安全的。</p></blockquote><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">private</span> <span class="keyword">int</span> <span class="title">newCapacity</span><span class="params">(<span class="keyword">int</span> minCapacity)</span> </span>&#123;</span><br><span class="line">   <span class="keyword">int</span> newCapacity = (value.length &lt;&lt; <span class="number">1</span>) + <span class="number">2</span>;</span><br><span class="line">   <span class="keyword">if</span> (newCapacity - minCapacity &lt; <span class="number">0</span>) &#123;</span><br><span class="line">       newCapacity = minCapacity;</span><br><span class="line">        &#125;</span><br></pre></td></tr></table></figure><blockquote><p>int newCapacity = (value.length &lt;&lt; 1) + 2;二进制位向左一位，例如010变成100变大一倍，然后加2，所以StringBuffer容量扩大二倍加2。</p></blockquote><h2 id="StringBuilder"><a href="#StringBuilder" class="headerlink" title="StringBuilder"></a>StringBuilder</h2><blockquote><p>StringBuilder于StringBuffer一样都是用于字符串拼接操作，StingBuilder不是线程安全的。</p></blockquote>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;String&quot;&gt;&lt;a href=&quot;#String&quot; class=&quot;headerlink&quot; title=&quot;String&quot;&gt;&lt;/a&gt;String&lt;/h2&gt;&lt;blockquote&gt;
&lt;p&gt;String在JDK1.8和JDK1.9中底层有所不同，在JDK1.8中Strin
      
    
    </summary>
    
    
    
  </entry>
  
</feed>
